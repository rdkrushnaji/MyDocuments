vSSH on Ubuntu 18.04

sudo systemctl status ssh
sudo apt install openssh-server
sudo ufw allow ssh
ssh username@ip_address
sudo systemctl start ssh
sudo systemctl stop ssh
To disable the SSH service to start during system boot run:
sudo systemctl disable ssh
sudo systemctl enable ssh

/etc/ssh/sshd-conf

 netstat -a
netstat –ano

to restart jenkins
http://localhost:8080/restart
http://localhost:6600

Office
DevOps

Docker:

Git  vs. SVN – What Is The Difference?

delete_files_terminal_search
find -iname '*.pdf'
find -iname '*.pdf' -delete

################################################
______________________________________________________________
docker --version
docker login
docker image ls
docker image ls -la
docker container -ls
docker container -ls -la
docker ps
docker ps -a       //to list hidden
docker pull nginx
docker pull ubuntu:18.04

docker run -it --name container1 -d -p 127.0.0.1:8080:80/tcp ubuntu:18.04

docker exec -it 3773f3bc1602 bash 

 apt update
 apt install nginx -y
 service nginx status
 service nginx start
 service nginx enable
 apt install wget -y
 apt install unzip -y
apt install apache2

docker container stats nginx1

 apt install vim -y
 apt install net-tools
 apt install curl

docker container stats container_name
docker container rename 0518367280b4 cid
docker container stats container_name
docker container stop container_name
docker container start container_name


cd /var/www/html/
 wget https://www.free-css.com/assets/files/free-css-templates/download/page261/reflux.zip
 ls
 unzip reflux.zip
 ls
cd templatemo_531_reflux/
mv * /var/www/html/
 cd ..
 ls
rm -r templatemo_531_reflux/

 //removes unwanted packages

apt list installed
apt list | grep vim oot1

apt remove vim -y
apt remove unzip -y
apt remove wget -y
apt remove curl -y
apt remove net-tools
apt autoremove   //removes unwanted dependencies
apt-get clean 

docker container ls
docker commit container1 image1
docker image ls
docker run -it --name container2 -d -p 9999:80 image1
docker container ls
docker exec -it container2 bash
root@7496cd42f200:/# service nginx start

 docker tag  image1 krushnaji/image13
 docker image push krushnaji/image13


Save Docker Image in Tar file and share it with friend without using repository

docker save  4c96d090518b -o C:\Users\root\Desktop\my_docker_image\myzipimage.tar
                                             OR
docker save krushnaji/image13 -o C:\Users\root\Desktop\my_docker_image\myzipimage2.tar


docker load -i C:\Users\root\Desktop\hudas\myzipimage.tar

##############################################
                                      DOCKER VOLUMES
##############################################

pwd

PS C:\Users\root\Desktop\my-windows-folder> pwd

Path
----
C:\Users\root\Desktop\my-windows-folder

####Assign VolumeFrom Host to Containers

docker  run -it  --name mywebserver -v C:\Users\root\Desktop\my-windows-folder:/var/www/html:ro    -d -p 8080:80 4c96d090518b

docker exec -it mywebserver bash
service nginx start

####Share Volume Between Two Containers
docker  run -it  --name mywebserver-copy --volumes-from  mywebserver   -d -p 8081:80 4c96d090518b

docker  run -it  --name mywebserver-copy --volumes-from  mywebserver   -d -p 8081:80 4c96d090518b
service nginx start

//for linux
 docker  run -it  --name mywebserver -v $(pwd):/usr/share/nginx/html:ro    -d -p 8080:80 myimage1


##############################################
                                      DOCKER FILE
##############################################
DOCKER FILE IS USE TO BUILD OUR OWN IMAGES








##############################################
                                      ALPINE
##############################################

docker pull nginx:alpine

sudo apache2ctl configtest

docker pull alpine
docker run -it --name goa -d -p 7777:80 alpine
docker exec -it goa /bin/sh





************************************************************
How do I configure a user account to have ‘logon as a service’ permissions?
Answer
Logon to the computer with administrative privileges.
Open the ‘Administrative Tools’ and open the ‘Local Security Policy’
Expand ‘Local Policy’ and click on ‘User Rights Assignment’
In the right pane, right-click ‘Log on as a service’ and select properties.
Click on the ‘Add User or Group…’ button to add the new user.
In the ‘Select Users or Groups’ dialogue, find the user you wish to enter and click ‘OK’
Click ‘OK’ in the ‘Log on as a service Properties’ to save changes.
NOTES:
*******************************************************************
74b94c27a583440d891e1a70c87be007
jenkins key1377
*************************************************************************




########################################
                                 KUBERNETES
########################################
DOWNLOAD MINIKUBE & CUBECTL
PASTE BOTH FILE IN ONE FOLDER
ASSIGN PATH
RESTART

POWERSHELL RUN AS ADMIN

minikube
minikube  start
kubectl get pods
minikube  ip
minikube ssh

for ssh from putty:
username: "docker", 
password: "tcuser"



***********************************************
UDEMY
**********************************************
vagrant box from https://github.com/wardviaene/devops-box

goto directory and vagrant init ubuntu/xenial64
vagrant up


https://kubernetes.io/docs/tutorials/hello-minikube/

https://www.cloudping.info/

docker container run -it --name c1 alpine ash

ctrl+p ctrl+q     ///come outside of container without stopping it from running


*********************************************************
gcloud beta container --project "sylvan-box-303207" clusters create "mycluster" --zone "asia-southeast2-c" --no-enable-basic-auth --cluster-version "1.17.14-gke.1600" --release-channel "regular" --machine-type "e2-medium" --image-type "COS" --disk-type "pd-standard" --disk-size "100" --metadata disable-legacy-endpoints=true --scopes "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append" --num-nodes "3" --enable-stackdriver-kubernetes --enable-ip-alias --network "projects/sylvan-box-303207/global/networks/default" --subnetwork "projects/sylvan-box-303207/regions/asia-southeast2/subnetworks/default" --default-max-pods-per-node "110" --no-enable-master-authorized-networks --addons HorizontalPodAutoscaling,HttpLoadBalancing --enable-autoupgrade --enable-autorepair --max-surge-upgrade 1 --max-unavailable-upgrade 0


Welcome to Cloud Shell! Type "help" to get started.
To set your Cloud Platform project in this session use “gcloud config set project [PROJECT_ID]”
rdkrushnaji@cloudshell:~$ gcloud container clusters get-credentials mycluster --zone asia-southeast2-c --project sylvan-box-303207
Fetching cluster endpoint and auth data.
kubeconfig entry generated for mycluster.
rdkrushnaji@cloudshell:~$ kubectl get nodes
NAME                                       STATUS   ROLES    AGE     VERSION
gke-mycluster-default-pool-ccb91b32-2ssm   Ready    <none>   5m56s   v1.17.14-gke.1600
gke-mycluster-default-pool-ccb91b32-59qc   Ready    <none>   5m57s   v1.17.14-gke.1600
gke-mycluster-default-pool-ccb91b32-tg14   Ready    <none>   5m55s   v1.17.14-gke.1600
rdkrushnaji@cloudshell:~$ kubectl get pods
No resources found in default namespace.
rdkrushnaji@cloudshell:~$

rdkrushnaji@cloudshell:~$ kubectl get nodes -o wide
NAME                                       STATUS   ROLES    AGE     VERSION             INTERNAL-IP   EXTERNAL-IP     OS-IMAGE                             KERNEL-VERSION   CONTAINER-RUNTIME
gke-mycluster-default-pool-ccb91b32-2ssm   Ready    <none>   7m39s   v1.17.14-gke.1600   10.184.0.4    34.101.85.95    Container-Optimized OS from Google   4.19.150+        docker://19.3.6
gke-mycluster-default-pool-ccb91b32-59qc   Ready    <none>   7m40s   v1.17.14-gke.1600   10.184.0.2    34.101.119.2    Container-Optimized OS from Google   4.19.150+        docker://19.3.6
gke-mycluster-default-pool-ccb91b32-tg14   Ready    <none>   7m38s   v1.17.14-gke.1600   10.184.0.3    34.101.132.92   Container-Optimized OS from Google   4.19.150+        docker://19.3.6
rdkrushnaji@cloudshell:~$



Welcome to Cloud Shell! Type "help" to get started.
To set your Cloud Platform project in this session use “gcloud config set project [PROJECT_ID]”
rdkrushnaji@cloudshell:~$ ls
k8  README-cloudshell.txt
rdkrushnaji@cloudshell:~$ cd k8/
rdkrushnaji@cloudshell:~/k8$ ls
deployment  pods  README.md  rs  service  strategy
rdkrushnaji@cloudshell:~/k8$ cd pods/
rdkrushnaji@cloudshell:~/k8/pods$ ls
pod-curl.yaml  pod-multi-container.yaml  pod-without-port-label.yaml  pod-with-port.yaml
rdkrushnaji@cloudshell:~/k8/pods$ cat  pod-without-port-label.yaml
apiVersion: v1
kind: Pod
metadata:
  name: webserver
spec:
  containers:
  - name: web
    image: nginx:alpine
rdkrushnaji@cloudshell:~/k8/pods$ kubectl create -f pod-without-port-label.yaml
pod/webserver created
rdkrushnaji@cloudshell:~/k8/pods$ kubectl get pods
NAME        READY   STATUS    RESTARTS   AGE
webserver   1/1     Running   0          24s
rdkrushnaji@cloudshell:~/k8/pods$ kubectl get pods -o wide
NAME        READY   STATUS    RESTARTS   AGE   IP           NODE                                       NOMINATED NODE   READINESS GATES
webserver   1/1     Running   0          33s   10.124.0.4   gke-mycluster-default-pool-ccb91b32-59qc   <none>           <none>
rdkrushnaji@cloudshell:~/k8/pods$

  web:
    Container ID:   docker://9adecd6a83bbb16ba9e3b00c667ff022430b16e9beccfda598ad6f85cf7dc03d
    Image:          nginx:alpine
    Image ID:       docker-pullable://nginx@sha256:c2ce58e024275728b00a554ac25628af25c54782865b3487b11c21cafb7fabda
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Sun, 31 Jan 2021 10:29:08 +0000
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-qkzrk (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  default-token-qkzrk:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-qkzrk
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age    From               Message
  ----    ------     ----   ----               -------
  Normal  Scheduled  3m17s  default-scheduler  Successfully assigned default/webserver to gke-mycluster-default-pool-ccb91b32-59qc
  Normal  Pulling    3m16s  kubelet            Pulling image "nginx:alpine"
  Normal  Pulled     3m12s  kubelet            Successfully pulled image "nginx:alpine"
  Normal  Created    3m12s  kubelet            Created container web
  Normal  Started    3m12s  kubelet            Started container web
rdkrushnaji@cloudshell:~/k8/pods$

rdkrushnaji@cloudshell:~/k8/pods$ kubectl describe pod/webserver | less

rdkrushnaji@cloudshell:~/k8/pods$ kubectl describe pod/webserver | tail

rdkrushnaji@cloudshell:~/k8/pods$ kubectl exec -it webserver sh
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
/ #

rdkrushnaji@cloudshell:~/k8/pods$ kubectl exec -it webserver sh
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
/ # ls
bin                   docker-entrypoint.sh  lib                   opt                   run                   sys                   var
dev                   etc                   media                 proc                  sbin                  tmp
docker-entrypoint.d   home                  mnt                   root                  srv                   usr
/ # cd /usr/share/nginx/html/
/usr/share/nginx/html # ls
50x.html    index.html
/usr/share/nginx/html # exit
rdkrushnaji@cloudshell:~/k8/pods$ kubectl exec -it -c web webserver -- sh
/ # ls
bin                   docker-entrypoint.sh  lib                   opt                   run                   sys                   var
dev                   etc                   media                 proc                  sbin                  tm
docker-entrypoint.d   home                  mnt                   root       l           srv                   usr
/ #ifconfig

/ #ip a
/ #ip a s 

kubectl delete pod/webserver    OR

rdkrushnaji@cloudshell:~/k8/pods$ kubectl delete -f pod-without-port-label.yaml
pod "webserver" deleted
rdkrushnaji@cloudshell:~/k8/pods$ kubectl get pods
No resources found in default namespace.
rdkrushnaji@cloudshell:~/k8/pods$ kubectl get all
NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.0.0.1     <none>        443/TCP   104m
rdkrushnaji@cloudshell:~/k8/pods$

2

rdkrushnaji@cloudshell:~$ cd k8/
rdkrushnaji@cloudshell:~/k8$ ls
deployment  pods  README.md  rs  service  strategy
rdkrushnaji@cloudshell:~/k8$ cd pods/
rdkrushnaji@cloudshell:~/k8/pods$ ls
pod-curl.yaml  pod-multi-container.yaml  pod-without-port-label.yaml  pod-with-port.yaml
rdkrushnaji@cloudshell:~/k8/pods$ kubectl create -f pod-curl.yaml
pod/browser created
rdkrushnaji@cloudshell:~/k8/pods$ kubectl get pods
NAME      READY   STATUS    RESTARTS   AGE
browser   1/1     Running   0          52s
rdkrushnaji@cloudshell:~/k8/pods$ kubectl get pods
NAME      READY   STATUS    RESTARTS   AGE
browser   1/1     Running   0          56s
rdkrushnaji@cloudshell:~/k8/pods$ cat pod-curl.yaml
apiVersion: v1
kind: Pod
metadata:
  name: browser
spec:
  containers:
  - name: curl
    image: vipin2411/curl
    imagePullPolicy: IfNotPresent
    command: ['sh', '-c', 'echo Pod running ; sleep 7200']
rdkrushnaji@cloudshell:~/k8/pods$ kubectl get pods -o wide
NAME      READY   STATUS    RESTARTS   AGE   IP           NODE                                       NOMINATED NODE   READINESS GATES
browser   1/1     Running   0          90s   10.124.0.5   gke-mycluster-default-pool-ccb91b32-59qc   <none>           <none>
rdkrushnaji@cloudshell:~/k8/pods$

rdkrushnaji@cloudshell:~/k8/pods$ kubectl exec -it browser -- sh
/ # ls
bin    dev    etc    home   lib    media  mnt    proc   root   run    sbin   srv    sys    tmp    usr    var
/ # exit
rdkrushnaji@cloudshell:~/k8/pods$ kubectl delete pod/browser
pod "browser" deleted
rdkrushnaji@cloudshell:~/k8/pods$



rdkrushnaji@cloudshell:~/k8/pods$ kubectl create -f pod-with-port.yaml
pod/webserver created
rdkrushnaji@cloudshell:~/k8/pods$ kubectl get pods
NAME        READY   STATUS    RESTARTS   AGE
webserver   1/1     Running   0          14s
rdkrushnaji@cloudshell:~/k8/pods$ kubectl get pods -o wide
NAME        READY   STATUS    RESTARTS   AGE   IP           NODE                                       NOMINATED NODE   READINESS GATES
webserver   1/1     Running   0          20s   10.124.0.6   gke-mycluster-default-pool-ccb91b32-59qc   <none>           <none>
rdkrushnaji@cloudshell:~/k8/pods$ kubectl get pods --show-labels
NAME        READY   STATUS    RESTARTS   AGE   LABELS
webserver   1/1     Running   0          89s   app=nginxweb
rdkrushnaji@cloudshell:~/k8/pods$ kubectl create -f pod-curl.yaml
pod/browser created
rdkrushnaji@cloudshell:~/k8/pods$ kubectl get pods
NAME        READY   STATUS    RESTARTS   AGE
browser     1/1     Running   0          9s
webserver   1/1     Running   0          3m45s
rdkrushnaji@cloudshell:~/k8/pods$ kubectl get all
NAME            READY   STATUS    RESTARTS   AGE
pod/browser     1/1     Running   0          17s
pod/webserver   1/1     Running   0          3m53s

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.0.0.1     <none>        443/TCP   3h21m
rdkrushnaji@cloudshell:~/k8/pods$ kubectl get pods
NAME        READY   STATUS    RESTARTS   AGE
browser     1/1     Running   0          23s
webserver   1/1     Running   0          3m59s


gcloud compute ssh --zone asia-southeast2-c --project sylvan-box-303207 gke-mycluster-default-pool-ccb91b32-tg14


 gcloud config set project sylvan-box-303207

oo


******************
rdkrushnaji@cloudshell:~/k8$ kubectl run curl --rm --restart=never --image=vipin2411/curl -it -- sh
error: invalid restart policy: never
See 'kubectl run -h' for help and examples
rdkrushnaji@cloudshell:~/k8$ kubectl run curl --rm --restart=Never --image=vipin2411/curl -it -- sh
If you don't see a command prompt, try pressing enter.
/ # ls
bin    dev    etc    home   lib    media  mnt    proc   root   run    sbin   srv    sys    tmp    usr    var
/ # touch 123
/ # ls
123    dev    home   media  proc   run    srv    tmp    var
bin    etc    lib    mnt    root   sbin   sys    usr
/ # exit
pod "curl" deleted
rdkrushnaji@cloudshell:~/k8$

************************
++++++++++++++++++++++++++++++++

kubectl delete pods webserver


+++++++++++++++++++++
*******************************
24
replikaset

webserver-rs-tdvzz   1/1     Running   0          18s
rdkrushnaji@cloudshell:~/k8/rs$ kubectl get pods -o wide
NAME                 READY   STATUS    RESTARTS   AGE   IP           NODE                                       NOMINATED NODE   READINESS GATES
webserver-rs-84fdg   1/1     Running   0          30s   10.80.0.9    gke-mykluster-default-pool-f501c175-qh9t   <none>           <none>
webserver-rs-djkxs   1/1     Running   0          30s   10.80.0.10   gke-mykluster-default-pool-f501c175-qh9t   <none>           <none>
webserver-rs-tdvzz   1/1     Running   0          30s   10.80.1.3    gke-mykluster-default-pool-f501c175-tgld   <none>           <none>
rdkrushnaji@cloudshell:~/k8/rs$ kubectl get pods --show-labels
NAME                 READY   STATUS    RESTARTS   AGE   LABELS
webserver-rs-84fdg   1/1     Running   0          63s   app=nginxweb,env=development
webserver-rs-djkxs   1/1     Running   0          63s   app=nginxweb,env=development
webserver-rs-tdvzz   1/1     Running   0          63s   app=nginxweb,env=development
rdkrushnaji@cloudshell:~/k8/rs$ kubectl describe rs/webserver-rs
Name:         webserver-rs
Namespace:    default
Selector:     app=nginxweb
Labels:       <none>
Annotations:  <none>
Replicas:     3 current / 3 desired
Pods Status:  3 Running / 0 Waiting / 0 Succeeded / 0 Failed
Pod Template:
  Labels:  app=nginxweb
           env=development
  Containers:
   web:
    Image:        nginx:1.16-alpine
    Port:         <none>
    Host Port:    <none>
    Environment:  <none>
    Mounts:       <none>
  Volumes:        <none>
Events:
  Type    Reason            Age   From                   Message
  ----    ------            ----  ----                   -------
  Normal  SuccessfulCreate  110s  replicaset-controller  Created pod: webserver-rs-84fdg
  Normal  SuccessfulCreate  110s  replicaset-controller  Created pod: webserver-rs-tdvzz
  Normal  SuccessfulCreate  110s  replicaset-controller  Created pod: webserver-rs-djkxs
rdkrushnaji@cloudshell:~/k8/rs$


********

26

rdkrushnaji@cloudshell:~/k8/rs$ ls
pod-using-replica-set-ml.yaml
rdkrushnaji@cloudshell:~/k8/rs$ vi pod-using-replica-set-ml.yaml
rdkrushnaji@cloudshell:~/k8/rs$ kubectl get pods
NAME                 READY   STATUS    RESTARTS   AGE
webserver-rs-84fdg   1/1     Running   0          13m
webserver-rs-djkxs   1/1     Running   0          13m
webserver-rs-tdvzz   1/1     Running   0          13m
rdkrushnaji@cloudshell:~/k8/rs$ kubectl apply -f pod-using-replica-set-ml.yaml
Warning: resource replicasets/webserver-rs is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
replicaset.apps/webserver-rs configured
rdkrushnaji@cloudshell:~/k8/rs$ kubectl get pods
NAME                 READY   STATUS    RESTARTS   AGE
webserver-rs-2f5pb   1/1     Running   0          4s
webserver-rs-84fdg   1/1     Running   0          13m
webserver-rs-djkxs   1/1     Running   0          13m
webserver-rs-tdvzz   1/1     Running   0          13m
rdkrushnaji@cloudshell:~/k8/rs$ kubectl delete pod/webserver-rs-2f5pb
pod "webserver-rs-2f5pb" deleted
rdkrushnaji@cloudshell:~/k8/rs$ kubectl get pods
NAME                 READY   STATUS    RESTARTS   AGE
webserver-rs-84fdg   1/1     Running   0          16m
webserver-rs-djkxs   1/1     Running   0          16m
webserver-rs-tdvzz   1/1     Running   0          16m
webserver-rs-tttzv   1/1     Running   0          4s
rdkrushnaji@cloudshell:~/k8/rs$



NAME                 READY   STATUS    RESTARTS   AGE
webserver-rs-5l2ws   1/1     Running   0          3s
webserver-rs-84fdg   1/1     Running   0          18m
webserver-rs-djkxs   1/1     Running   0          18m
webserver-rs-tdvzz   1/1     Running   0          18m
webserver-rs-tttzv   1/1     Running   0          96s
webserver-rs-wvwfv   1/1     Running   0          3s
rdkrushnaji@cloudshell:~/k8/rs$ kubectl get rs
NAME           DESIRED   CURRENT   READY   AGE
webserver-rs   6         6         6       19m
rdkrushnaji@cloudshell:~/k8/rs$ kubectl delete rs/webserver-rs --cascade=false
warning: --cascade=false is deprecated (boolean value) and can be replaced with --cascade=orphan.
replicaset.apps "webserver-rs" deleted
rdkrushnaji@cloudshell:~/k8/rs$ kubectl get rs
No resources found in default namespace.
rdkrushnaji@cloudshell:~/k8/rs$ kubectl get pods
NAME                 READY   STATUS    RESTARTS   AGE
webserver-rs-5l2ws   1/1     Running   0          2m14s
webserver-rs-84fdg   1/1     Running   0          20m
webserver-rs-djkxs   1/1     Running   0          20m
webserver-rs-tdvzz   1/1     Running   0          20m
webserver-rs-tttzv   1/1     Running   0          3m47s
webserver-rs-wvwfv   1/1     Running   0          2m14s
rdkrushnaji@cloudshell:~/k8/rs$ kubectl delete rs/webserver-rs --cascade=true

*************************
29

cntrl+r used to search previous terminal commands in linux

deploy


NAME                           READY   STATUS    RESTARTS   AGE     LABELS
webserver-d-5c6ddf5f5b-479b9   1/1     Running   0          3m14s   app=nginxweb,pod-template-hash=5c6ddf5f5b
webserver-d-5c6ddf5f5b-mtvmm   1/1     Running   0          3m13s   app=nginxweb,pod-template-hash=5c6ddf5f5b
webserver-d-5c6ddf5f5b-xjnpq   1/1     Running   0          3m13s   app=nginxweb,pod-template-hash=5c6ddf5f5b
rdkrushnaji@cloudshell:~/k8/deployment$ kubectl describe deploy/webserver-d
Name:                   webserver-d
Namespace:              default
CreationTimestamp:      Tue, 02 Feb 2021 17:25:58 +0000
Labels:                 <none>
Annotations:            deployment.kubernetes.io/revision: 1
Selector:               app=nginxweb
Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:  app=nginxweb
  Containers:
   web:
    Image:        nginx:1.16-alpine
    Port:         80/TCP
    Host Port:    0/TCP
    Environment:  <none>
    Mounts:       <none>
  Volumes:        <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   webserver-d-5c6ddf5f5b (3/3 replicas created)
Events:
  Type    Reason             Age    From                   Message
  ----    ------             ----   ----                   -------
  Normal  ScalingReplicaSet  4m14s  deployment-controller  Scaled up replica set webserver-d-5c6ddf5f5b to 3
rdkrushnaji@cloudshell:~/k8/deployment$


*****************

